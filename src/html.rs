// Programmatically generated by scripts/codegen.py, do not edit manually.

//! HTML elements and attributes definitions.
//!
//! In the Wasmadeus framework, [HTML elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element) are replaced
//! with simple rust functions taking one or more [`Attributes`]
//! for input and returning a [`Component`].
//!
//! [HTML attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes) are simply rust structs that implement
//! the [`Attribute`] trait.
//!
//! This module contains the definitions and documentation of all standard HTML
//! elements and attributes, including the deprecated and experimental ones.

use web_sys::Element;

use crate::attribute::attributes;
use crate::component::elements;

pub use crate::attribute::CustomData;

attributes! {
    /// List of types the server accepts, typically a file type.
    ///
    /// Corresponds to the HTML attribute: `accept`.
    ///
    /// Can be applied to the following elements: [`form`], [`input`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept)
    Accept => "accept",
    /// List of supported charsets.
    ///
    /// Corresponds to the HTML attribute: `accept-charset`.
    ///
    /// Can be applied to the following elements: [`form`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#accept-charset)
    AcceptCharset => "accept-charset",
    /// Keyboard shortcut to activate or add focus to the element.
    ///
    /// Corresponds to the HTML attribute: `accesskey`.
    ///
    /// Global attribute: can be applied to any HTML element.
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/accesskey)
    AccessKey => "accesskey",
    /// The URI of a program that processes the information submitted via the form.
    ///
    /// Corresponds to the HTML attribute: `action`.
    ///
    /// Can be applied to the following elements: [`form`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#action)
    Action => "action",
    /// Specifies the horizontal alignment of the element.
    ///
    /// Corresponds to the HTML attribute: `align`.
    ///
    /// Can be applied to the following elements: [`caption`], [`col`], [`colgroup`], [`hr`], [`iframe`], [`img`], [`table`], [`tbody`], [`td`], [`tfoot`], [`th`], [`thead`], [`tr`].
    ///
    /// *Missing MDN documentation.*
    #[deprecated = "This HTML attribute is deprecated in the latest standard."]
    Align => "align",
    /// Specifies a feature-policy for the iframe.
    ///
    /// Corresponds to the HTML attribute: `allow`.
    ///
    /// Can be applied to the following elements: [`iframe`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#allow)
    Allow => "allow",
    /// Alternative text in case an image can't be displayed.
    ///
    /// Corresponds to the HTML attribute: `alt`.
    ///
    /// Can be applied to the following elements: [`area`], [`img`], [`input`].
    ///
    /// *Missing MDN documentation.*
    Alt => "alt",
    /// Executes the script asynchronously.
    ///
    /// Corresponds to the HTML attribute: `async`.
    ///
    /// Can be applied to the following elements: [`script`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#async)
    Async => "async",
    /// Sets whether input is automatically capitalized when entered by user
    ///
    /// Corresponds to the HTML attribute: `autocapitalize`.
    ///
    /// Global attribute: can be applied to any HTML element.
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autocapitalize)
    AutoCapitalize => "autocapitalize",
    /// Indicates whether controls in this form can by default have their values automatically completed by the browser.
    ///
    /// Corresponds to the HTML attribute: `autocomplete`.
    ///
    /// Can be applied to the following elements: [`form`], [`input`], [`select`], [`textarea`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)
    AutoComplete => "autocomplete",
    /// The audio or video should play as soon as possible.
    ///
    /// Corresponds to the HTML attribute: `autoplay`.
    ///
    /// Can be applied to the following elements: [`audio`], [`video`].
    ///
    /// *Missing MDN documentation.*
    AutoPlay => "autoplay",
    /// Specifies the URL of an image file. Note: Although browsers and email clients may still support this attribute, it is obsolete. Use CSS background-image instead.
    ///
    /// Corresponds to the HTML attribute: `background`.
    ///
    /// Can be applied to the following elements: [`body`], [`table`], [`td`], [`th`].
    ///
    /// *Missing MDN documentation.*
    Background => "background",
    /// Background color of the element. Note: This is a legacy attribute. Please use the CSS background-color property instead.
    ///
    /// Corresponds to the HTML attribute: `bgcolor`.
    ///
    /// Can be applied to the following elements: [`body`], [`col`], [`colgroup`], [`marquee`], [`table`], [`tbody`], [`td`], [`tfoot`], [`th`], [`tr`].
    ///
    /// *Missing MDN documentation.*
    BgColor => "bgcolor",
    /// The border width. Note: This is a legacy attribute. Please use the CSS border property instead.
    ///
    /// Corresponds to the HTML attribute: `border`.
    ///
    /// Can be applied to the following elements: [`img`], [`object`], [`table`].
    ///
    /// *Missing MDN documentation.*
    Border => "border",
    /// Contains the time range of already buffered media.
    ///
    /// Corresponds to the HTML attribute: `buffered`.
    ///
    /// Can be applied to the following elements: [`audio`], [`video`].
    ///
    /// *Missing MDN documentation.*
    Buffered => "buffered",
    /// From the Media Capture specification, specifies a new file can be captured.
    ///
    /// Corresponds to the HTML attribute: `capture`.
    ///
    /// Can be applied to the following elements: [`input`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/capture)
    Capture => "capture",
    /// Declares the character encoding of the page or script.
    ///
    /// Corresponds to the HTML attribute: `charset`.
    ///
    /// Can be applied to the following elements: [`meta`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#charset)
    Charset => "charset",
    /// Indicates whether the element should be checked on page load.
    ///
    /// Corresponds to the HTML attribute: `checked`.
    ///
    /// Can be applied to the following elements: [`input`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#checked)
    Checked => "checked",
    /// Contains a URI which points to the source of the quote or change.
    ///
    /// Corresponds to the HTML attribute: `cite`.
    ///
    /// Can be applied to the following elements: [`blockquote`], [`del`], [`ins`], [`q`].
    ///
    /// *Missing MDN documentation.*
    Cite => "cite",
    /// Often used with CSS to style elements with common properties.
    ///
    /// Corresponds to the HTML attribute: `class`.
    ///
    /// Global attribute: can be applied to any HTML element.
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/class)
    Class => "class",
    /// This attribute sets the text color using either a named color or a color specified in the hexadecimal #RRGGBB format. Note: This is a legacy attribute. Please use the CSS color property instead.
    ///
    /// Corresponds to the HTML attribute: `color`.
    ///
    /// Can be applied to the following elements: [`font`], [`hr`].
    ///
    /// *Missing MDN documentation.*
    Color => "color",
    /// Defines the number of columns in a textarea.
    ///
    /// Corresponds to the HTML attribute: `cols`.
    ///
    /// Can be applied to the following elements: [`textarea`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#cols)
    Cols => "cols",
    /// The colspan attribute defines the number of columns a cell should span.
    ///
    /// Corresponds to the HTML attribute: `colspan`.
    ///
    /// Can be applied to the following elements: [`td`], [`th`].
    ///
    /// *Missing MDN documentation.*
    Colspan => "colspan",
    /// A value associated with http-equiv or name depending on the context.
    ///
    /// Corresponds to the HTML attribute: `content`.
    ///
    /// Can be applied to the following elements: [`meta`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#content)
    Content => "content",
    /// Indicates whether the element's content is editable.
    ///
    /// Corresponds to the HTML attribute: `contenteditable`.
    ///
    /// Global attribute: can be applied to any HTML element.
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contenteditable)
    ContentEditable => "contenteditable",
    /// Defines the ID of a [`menu`] element which will serve as the element's context menu.
    ///
    /// Corresponds to the HTML attribute: `contextmenu`.
    ///
    /// Global attribute: can be applied to any HTML element.
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contextmenu)
    #[deprecated = "This HTML attribute is deprecated in the latest standard."]
    ContextMenu => "contextmenu",
    /// Indicates whether the browser should show playback controls to the user.
    ///
    /// Corresponds to the HTML attribute: `controls`.
    ///
    /// Can be applied to the following elements: [`audio`], [`video`].
    ///
    /// *Missing MDN documentation.*
    Controls => "controls",
    /// A set of values specifying the coordinates of the hot-spot region.
    ///
    /// Corresponds to the HTML attribute: `coords`.
    ///
    /// Can be applied to the following elements: [`area`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area#coords)
    Coords => "coords",
    /// How the element handles cross-origin requests
    ///
    /// Corresponds to the HTML attribute: `crossorigin`.
    ///
    /// Can be applied to the following elements: [`audio`], [`img`], [`link`], [`script`], [`video`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/crossorigin)
    CrossOrigin => "crossorigin",
    /// Specifies the Content Security Policy that an embedded document must agree to enforce upon itself.
    ///
    /// Corresponds to the HTML attribute: `csp`.
    ///
    /// Can be applied to the following elements: [`iframe`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/csp)
    Csp => "csp",
    /// Specifies the URL of the resource.
    ///
    /// Corresponds to the HTML attribute: `data`.
    ///
    /// Can be applied to the following elements: [`object`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object#data)
    Data => "data",
    /// Indicates the date and time associated with the element.
    ///
    /// Corresponds to the HTML attribute: `datetime`.
    ///
    /// Can be applied to the following elements: [`del`], [`ins`], [`time`].
    ///
    /// *Missing MDN documentation.*
    DateTime => "datetime",
    /// Indicates the preferred method to decode the image.
    ///
    /// Corresponds to the HTML attribute: `decoding`.
    ///
    /// Can be applied to the following elements: [`img`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#decoding)
    Decoding => "decoding",
    /// Indicates that the track should be enabled unless the user's preferences indicate something different.
    ///
    /// Corresponds to the HTML attribute: `default`.
    ///
    /// Can be applied to the following elements: [`track`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track#default)
    Default => "default",
    /// Defines a default value which will be displayed in the element on page load.
    ///
    /// Corresponds to the HTML attribute: `value`.
    ///
    /// Can be applied to the following elements: [`button`], [`data`], [`input`], [`li`], [`meter`], [`option`], [`param`], [`progress`].
    ///
    /// *Missing MDN documentation.*
    DefaultValue => "value",
    /// Indicates that the script should be executed after the page has been parsed.
    ///
    /// Corresponds to the HTML attribute: `defer`.
    ///
    /// Can be applied to the following elements: [`script`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#defer)
    Defer => "defer",
    /// Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl (Right-To-Left)
    ///
    /// Corresponds to the HTML attribute: `dir`.
    ///
    /// Global attribute: can be applied to any HTML element.
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dir)
    Dir => "dir",
    /// *Missing MDN description.*
    ///
    /// Corresponds to the HTML attribute: `dirname`.
    ///
    /// Can be applied to the following elements: [`input`], [`textarea`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/dirname)
    DirName => "dirname",
    /// Indicates whether the user can interact with the element.
    ///
    /// Corresponds to the HTML attribute: `disabled`.
    ///
    /// Can be applied to the following elements: [`button`], [`fieldset`], [`input`], [`optgroup`], [`option`], [`select`], [`textarea`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)
    Disabled => "disabled",
    /// Indicates that the hyperlink is to be used for downloading a resource.
    ///
    /// Corresponds to the HTML attribute: `download`.
    ///
    /// Can be applied to the following elements: [`a`], [`area`].
    ///
    /// *Missing MDN documentation.*
    Download => "download",
    /// Defines whether the element can be dragged.
    ///
    /// Corresponds to the HTML attribute: `draggable`.
    ///
    /// Global attribute: can be applied to any HTML element.
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/draggable)
    Draggable => "draggable",
    /// Defines the content type of the form data when the method is POST.
    ///
    /// Corresponds to the HTML attribute: `enctype`.
    ///
    /// Can be applied to the following elements: [`form`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#enctype)
    EncType => "enctype",
    /// The enterkeyhint specifies what action label (or icon) to present for the enter key on virtual keyboards. The attribute can be used with form controls (such as the value of textarea elements), or in elements in an editing host (e.g., using contenteditable attribute).
    ///
    /// Corresponds to the HTML attribute: `enterkeyhint`.
    ///
    /// Can be applied to the following elements: [`textarea`].
    ///
    /// *Missing MDN documentation.*
    EnterKeyHint => "enterkeyhint",
    /// Describes elements which belongs to this one.
    ///
    /// Corresponds to the HTML attribute: `for`.
    ///
    /// Can be applied to the following elements: [`label`], [`output`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/for)
    For => "for",
    /// Indicates the form that is the owner of the element.
    ///
    /// Corresponds to the HTML attribute: `form`.
    ///
    /// Can be applied to the following elements: [`button`], [`fieldset`], [`input`], [`label`], [`meter`], [`object`], [`output`], [`progress`], [`select`], [`textarea`].
    ///
    /// *Missing MDN documentation.*
    Form => "form",
    /// Indicates the action of the element, overriding the action defined in the [`form`].
    ///
    /// Corresponds to the HTML attribute: `formaction`.
    ///
    /// Can be applied to the following elements: [`button`], [`input`].
    ///
    /// *Missing MDN documentation.*
    FormAction => "formaction",
    /// If the button/input is a submit button (e.g. type="submit"), this attribute sets the encoding type to use during form submission. If this attribute is specified, it overrides the enctype attribute of the button's form owner.
    ///
    /// Corresponds to the HTML attribute: `formenctype`.
    ///
    /// Can be applied to the following elements: [`button`], [`input`].
    ///
    /// *Missing MDN documentation.*
    FormEnctype => "formenctype",
    /// If the button/input is a submit button (e.g. type="submit"), this attribute sets the submission method to use during form submission (GET, POST, etc.). If this attribute is specified, it overrides the method attribute of the button's form owner.
    ///
    /// Corresponds to the HTML attribute: `formmethod`.
    ///
    /// Can be applied to the following elements: [`button`], [`input`].
    ///
    /// *Missing MDN documentation.*
    FormMethod => "formmethod",
    /// If the button/input is a submit button (e.g. type="submit"), this boolean attribute specifies that the form is not to be validated when it is submitted. If this attribute is specified, it overrides the novalidate attribute of the button's form owner.
    ///
    /// Corresponds to the HTML attribute: `formnovalidate`.
    ///
    /// Can be applied to the following elements: [`button`], [`input`].
    ///
    /// *Missing MDN documentation.*
    FormNoValidate => "formnovalidate",
    /// If the button/input is a submit button (e.g. type="submit"), this attribute specifies the browsing context (for example, tab, window, or inline frame) in which to display the response that is received after submitting the form. If this attribute is specified, it overrides the target attribute of the button's form owner.
    ///
    /// Corresponds to the HTML attribute: `formtarget`.
    ///
    /// Can be applied to the following elements: [`button`], [`input`].
    ///
    /// *Missing MDN documentation.*
    FormTarget => "formtarget",
    /// IDs of the [`th`] elements which applies to this element.
    ///
    /// Corresponds to the HTML attribute: `headers`.
    ///
    /// Can be applied to the following elements: [`td`], [`th`].
    ///
    /// *Missing MDN documentation.*
    Headers => "headers",
    /// Specifies the height of elements listed here. For all other elements, use the CSS height property. Note: In some instances, such as [`div`], this is a legacy attribute, in which case the CSS height property should be used instead.
    ///
    /// Corresponds to the HTML attribute: `height`.
    ///
    /// Can be applied to the following elements: [`canvas`], [`embed`], [`iframe`], [`img`], [`input`], [`object`], [`video`].
    ///
    /// *Missing MDN documentation.*
    Height => "height",
    /// Prevents rendering of given element, while keeping child elements, e.g. script elements, active.
    ///
    /// Corresponds to the HTML attribute: `hidden`.
    ///
    /// Global attribute: can be applied to any HTML element.
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/hidden)
    Hidden => "hidden",
    /// Indicates the lower bound of the upper range.
    ///
    /// Corresponds to the HTML attribute: `high`.
    ///
    /// Can be applied to the following elements: [`meter`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter#high)
    High => "high",
    /// The URL of a linked resource.
    ///
    /// Corresponds to the HTML attribute: `href`.
    ///
    /// Can be applied to the following elements: [`a`], [`area`], [`base`], [`link`].
    ///
    /// *Missing MDN documentation.*
    Href => "href",
    /// Specifies the language of the linked resource.
    ///
    /// Corresponds to the HTML attribute: `hreflang`.
    ///
    /// Can be applied to the following elements: [`a`], [`link`].
    ///
    /// *Missing MDN documentation.*
    HrefLang => "hreflang",
    /// Defines a pragma directive.
    ///
    /// Corresponds to the HTML attribute: `http-equiv`.
    ///
    /// Can be applied to the following elements: [`meta`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#http-equiv)
    HttpEquiv => "http-equiv",
    /// Often used with CSS to style a specific element. The value of this attribute must be unique.
    ///
    /// Corresponds to the HTML attribute: `id`.
    ///
    /// Global attribute: can be applied to any HTML element.
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id)
    Id => "id",
    /// Provides a hint as to the type of data that might be entered by the user while editing the element or its contents. The attribute can be used with form controls (such as the value of textarea elements), or in elements in an editing host (e.g., using contenteditable attribute).
    ///
    /// Corresponds to the HTML attribute: `inputmode`.
    ///
    /// Can be applied to the following elements: [`textarea`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode)
    InputMode => "inputmode",
    /// Specifies a Subresource Integrity value that allows browsers to verify what they fetch.
    ///
    /// Corresponds to the HTML attribute: `integrity`.
    ///
    /// Can be applied to the following elements: [`link`], [`script`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity)
    Integrity => "integrity",
    /// This attribute tells the browser to ignore the actual intrinsic size of the image and pretend it's the size specified in the attribute.
    ///
    /// Corresponds to the HTML attribute: `intrinsicsize`.
    ///
    /// Can be applied to the following elements: [`img`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#intrinsicsize)
    #[deprecated = "This HTML attribute is deprecated in the latest standard."]
    IntrinsicSize => "intrinsicsize",
    /// Indicates that the image is part of a server-side image map.
    ///
    /// Corresponds to the HTML attribute: `ismap`.
    ///
    /// Can be applied to the following elements: [`img`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#ismap)
    IsMap => "ismap",
    /// *Missing MDN description.*
    ///
    /// Corresponds to the HTML attribute: `itemprop`.
    ///
    /// Global attribute: can be applied to any HTML element.
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/itemprop)
    ItemProp => "itemprop",
    /// Specifies the kind of text track.
    ///
    /// Corresponds to the HTML attribute: `kind`.
    ///
    /// Can be applied to the following elements: [`track`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track#kind)
    Kind => "kind",
    /// Specifies a user-readable title of the element.
    ///
    /// Corresponds to the HTML attribute: `label`.
    ///
    /// Can be applied to the following elements: [`optgroup`], [`option`], [`track`].
    ///
    /// *Missing MDN documentation.*
    Label => "label",
    /// Defines the language used in the element.
    ///
    /// Corresponds to the HTML attribute: `lang`.
    ///
    /// Global attribute: can be applied to any HTML element.
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/lang)
    Lang => "lang",
    /// Defines the script language used in the element.
    ///
    /// Corresponds to the HTML attribute: `language`.
    ///
    /// Can be applied to the following elements: [`script`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script#language)
    #[deprecated = "This HTML attribute is deprecated in the latest standard."]
    Language => "language",
    /// Identifies a list of pre-defined options to suggest to the user.
    ///
    /// Corresponds to the HTML attribute: `list`.
    ///
    /// Can be applied to the following elements: [`input`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#list)
    List => "list",
    /// Indicates if the element should be loaded lazily (loading="lazy") or loaded immediately (loading="eager").
    ///
    /// Corresponds to the HTML attribute: `loading`.
    ///
    /// Can be applied to the following elements: [`iframe`], [`img`].
    ///
    /// *Missing MDN documentation.*
    Loading => "loading",
    /// Indicates whether the media should start playing from the start when it's finished.
    ///
    /// Corresponds to the HTML attribute: `loop`.
    ///
    /// Can be applied to the following elements: [`audio`], [`marquee`], [`video`].
    ///
    /// *Missing MDN documentation.*
    Loop => "loop",
    /// Indicates the upper bound of the lower range.
    ///
    /// Corresponds to the HTML attribute: `low`.
    ///
    /// Can be applied to the following elements: [`meter`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter#low)
    Low => "low",
    /// Specifies the URL of the document's cache manifest. Note: This attribute is obsolete, use `<link rel="manifest">` instead.
    ///
    /// Corresponds to the HTML attribute: `manifest`.
    ///
    /// Can be applied to the following elements: [`html`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html#manifest)
    #[deprecated = "This HTML attribute is deprecated in the latest standard."]
    Manifest => "manifest",
    /// Indicates the maximum value allowed.
    ///
    /// Corresponds to the HTML attribute: `max`.
    ///
    /// Can be applied to the following elements: [`input`], [`meter`], [`progress`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/max)
    Max => "max",
    /// Defines the maximum number of characters allowed in the element.
    ///
    /// Corresponds to the HTML attribute: `maxlength`.
    ///
    /// Can be applied to the following elements: [`input`], [`textarea`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/maxlength)
    MaxLength => "maxlength",
    /// Specifies a hint of the media for which the linked resource was designed.
    ///
    /// Corresponds to the HTML attribute: `media`.
    ///
    /// Can be applied to the following elements: [`a`], [`area`], [`link`], [`source`], [`style`].
    ///
    /// *Missing MDN documentation.*
    Media => "media",
    /// Defines which HTTP method to use when submitting the form. Can be GET (default) or POST.
    ///
    /// Corresponds to the HTML attribute: `method`.
    ///
    /// Can be applied to the following elements: [`form`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#method)
    Method => "method",
    /// Indicates the minimum value allowed.
    ///
    /// Corresponds to the HTML attribute: `min`.
    ///
    /// Can be applied to the following elements: [`input`], [`meter`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/min)
    Min => "min",
    /// Defines the minimum number of characters allowed in the element.
    ///
    /// Corresponds to the HTML attribute: `minlength`.
    ///
    /// Can be applied to the following elements: [`input`], [`textarea`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/minlength)
    MinLength => "minlength",
    /// Indicates whether multiple values can be entered in an input of the type email or file.
    ///
    /// Corresponds to the HTML attribute: `multiple`.
    ///
    /// Can be applied to the following elements: [`input`], [`select`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/multiple)
    Multiple => "multiple",
    /// Indicates whether the audio will be initially silenced on page load.
    ///
    /// Corresponds to the HTML attribute: `muted`.
    ///
    /// Can be applied to the following elements: [`audio`], [`video`].
    ///
    /// *Missing MDN documentation.*
    Muted => "muted",
    /// Name of the element. For example used by the server to identify the fields in form submits.
    ///
    /// Corresponds to the HTML attribute: `name`.
    ///
    /// Can be applied to the following elements: [`button`], [`fieldset`], [`form`], [`iframe`], [`input`], [`map`], [`meta`], [`object`], [`output`], [`param`], [`select`], [`textarea`].
    ///
    /// *Missing MDN documentation.*
    Name => "name",
    /// This attribute indicates that the form shouldn't be validated when submitted.
    ///
    /// Corresponds to the HTML attribute: `novalidate`.
    ///
    /// Can be applied to the following elements: [`form`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#novalidate)
    NoValidate => "novalidate",
    /// Indicates whether the contents are currently visible (in the case of a [`details`] element) or whether the dialog is active and can be interacted with (in the case of a [`dialog`] element).
    ///
    /// Corresponds to the HTML attribute: `open`.
    ///
    /// Can be applied to the following elements: [`details`], [`dialog`].
    ///
    /// *Missing MDN documentation.*
    Open => "open",
    /// Indicates the optimal numeric value.
    ///
    /// Corresponds to the HTML attribute: `optimum`.
    ///
    /// Can be applied to the following elements: [`meter`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter#optimum)
    Optimum => "optimum",
    /// Defines a regular expression which the element's value will be validated against.
    ///
    /// Corresponds to the HTML attribute: `pattern`.
    ///
    /// Can be applied to the following elements: [`input`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern)
    Pattern => "pattern",
    /// The ping attribute specifies a space-separated list of URLs to be notified if a user follows the hyperlink.
    ///
    /// Corresponds to the HTML attribute: `ping`.
    ///
    /// Can be applied to the following elements: [`a`], [`area`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#ping)
    Ping => "ping",
    /// Provides a hint to the user of what can be entered in the field.
    ///
    /// Corresponds to the HTML attribute: `placeholder`.
    ///
    /// Can be applied to the following elements: [`input`], [`textarea`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/placeholder)
    PlaceHolder => "placeholder",
    /// A Boolean attribute indicating that the video is to be played "inline"; that is, within the element's playback area. Note that the absence of this attribute does not imply that the video will always be played in fullscreen.
    ///
    /// Corresponds to the HTML attribute: `playsinline`.
    ///
    /// Can be applied to the following elements: [`video`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#playsinline)
    PlaysInline => "playsinline",
    /// A URL indicating a poster frame to show until the user plays or seeks.
    ///
    /// Corresponds to the HTML attribute: `poster`.
    ///
    /// Can be applied to the following elements: [`video`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#poster)
    Poster => "poster",
    /// Indicates whether the whole resource, parts of it or nothing should be preloaded.
    ///
    /// Corresponds to the HTML attribute: `preload`.
    ///
    /// Can be applied to the following elements: [`audio`], [`video`].
    ///
    /// *Missing MDN documentation.*
    Preload => "preload",
    /// Indicates whether the element can be edited.
    ///
    /// Corresponds to the HTML attribute: `readonly`.
    ///
    /// Can be applied to the following elements: [`input`], [`textarea`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)
    ReadOnly => "readonly",
    /// Specifies which referrer is sent when fetching the resource.
    ///
    /// Corresponds to the HTML attribute: `referrerpolicy`.
    ///
    /// Can be applied to the following elements: [`a`], [`area`], [`iframe`], [`img`], [`link`], [`script`].
    ///
    /// *Missing MDN documentation.*
    ReferrerPolicy => "referrerpolicy",
    /// Specifies the relationship of the target object to the link object.
    ///
    /// Corresponds to the HTML attribute: `rel`.
    ///
    /// Can be applied to the following elements: [`a`], [`area`], [`link`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel)
    Rel => "rel",
    /// Indicates whether this element is required to fill out or not.
    ///
    /// Corresponds to the HTML attribute: `required`.
    ///
    /// Can be applied to the following elements: [`input`], [`select`], [`textarea`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/required)
    Required => "required",
    /// Indicates whether the list should be displayed in a descending order instead of an ascending order.
    ///
    /// Corresponds to the HTML attribute: `reversed`.
    ///
    /// Can be applied to the following elements: [`ol`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol#reversed)
    Reversed => "reversed",
    /// Defines an explicit role for an element for use by assistive technologies.
    ///
    /// Corresponds to the HTML attribute: `role`.
    ///
    /// Global attribute: can be applied to any HTML element.
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles)
    Role => "role",
    /// Defines the number of rows a table cell should span over.
    ///
    /// Corresponds to the HTML attribute: `rowspan`.
    ///
    /// Can be applied to the following elements: [`td`], [`th`].
    ///
    /// *Missing MDN documentation.*
    RowSpan => "rowspan",
    /// Defines the number of rows in a text area.
    ///
    /// Corresponds to the HTML attribute: `rows`.
    ///
    /// Can be applied to the following elements: [`textarea`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#rows)
    Rows => "rows",
    /// Stops a document loaded in an iframe from using certain features (such as submitting forms or opening new windows).
    ///
    /// Corresponds to the HTML attribute: `sandbox`.
    ///
    /// Can be applied to the following elements: [`iframe`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#sandbox)
    SandBox => "sandbox",
    /// Defines the cells that the header test (defined in the th element) relates to.
    ///
    /// Corresponds to the HTML attribute: `scope`.
    ///
    /// Can be applied to the following elements: [`th`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th#scope)
    Scope => "scope",
    /// *Missing MDN description.*
    ///
    /// Corresponds to the HTML attribute: `scoped`.
    ///
    /// Can be applied to the following elements: [`style`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style#scoped)
    #[deprecated = "This HTML attribute is deprecated in the latest standard."]
    Scoped => "scoped",
    /// Defines a value which will be selected on page load.
    ///
    /// Corresponds to the HTML attribute: `selected`.
    ///
    /// Can be applied to the following elements: [`option`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option#selected)
    Selected => "selected",
    /// *Missing MDN description.*
    ///
    /// Corresponds to the HTML attribute: `shape`.
    ///
    /// Can be applied to the following elements: [`a`], [`area`].
    ///
    /// *Missing MDN documentation.*
    Shape => "shape",
    /// Defines the width of the element (in pixels). If the element's type attribute is text or password then it's the number of characters.
    ///
    /// Corresponds to the HTML attribute: `size`.
    ///
    /// Can be applied to the following elements: [`input`], [`select`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/size)
    Size => "size",
    /// *Missing MDN description.*
    ///
    /// Corresponds to the HTML attribute: `sizes`.
    ///
    /// Can be applied to the following elements: [`img`], [`link`], [`source`].
    ///
    /// *Missing MDN documentation.*
    Sizes => "sizes",
    /// Assigns a slot in a shadow DOM shadow tree to an element.
    ///
    /// Corresponds to the HTML attribute: `slot`.
    ///
    /// Global attribute: can be applied to any HTML element.
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/slot)
    Slot => "slot",
    /// *Missing MDN description.*
    ///
    /// Corresponds to the HTML attribute: `span`.
    ///
    /// Can be applied to the following elements: [`col`], [`colgroup`].
    ///
    /// *Missing MDN documentation.*
    Span => "span",
    /// Indicates whether spell checking is allowed for the element.
    ///
    /// Corresponds to the HTML attribute: `spellcheck`.
    ///
    /// Global attribute: can be applied to any HTML element.
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/spellcheck)
    SpellCheck => "spellcheck",
    /// The URL of the embeddable content.
    ///
    /// Corresponds to the HTML attribute: `src`.
    ///
    /// Can be applied to the following elements: [`audio`], [`embed`], [`iframe`], [`img`], [`input`], [`script`], [`source`], [`track`], [`video`].
    ///
    /// *Missing MDN documentation.*
    Src => "src",
    /// *Missing MDN description.*
    ///
    /// Corresponds to the HTML attribute: `srcdoc`.
    ///
    /// Can be applied to the following elements: [`iframe`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#srcdoc)
    SrcDoc => "srcdoc",
    /// *Missing MDN description.*
    ///
    /// Corresponds to the HTML attribute: `srclang`.
    ///
    /// Can be applied to the following elements: [`track`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track#srclang)
    SrcLang => "srclang",
    /// One or more responsive image candidates.
    ///
    /// Corresponds to the HTML attribute: `srcset`.
    ///
    /// Can be applied to the following elements: [`img`], [`source`].
    ///
    /// *Missing MDN documentation.*
    SrcSet => "srcset",
    /// Defines the first number if other than 1.
    ///
    /// Corresponds to the HTML attribute: `start`.
    ///
    /// Can be applied to the following elements: [`ol`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol#start)
    Start => "start",
    /// *Missing MDN description.*
    ///
    /// Corresponds to the HTML attribute: `step`.
    ///
    /// Can be applied to the following elements: [`input`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step)
    Step => "step",
    /// Defines CSS styles which will override styles previously set.
    ///
    /// Corresponds to the HTML attribute: `style`.
    ///
    /// Global attribute: can be applied to any HTML element.
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/style)
    Style => "style",
    /// *Missing MDN description.*
    ///
    /// Corresponds to the HTML attribute: `summary`.
    ///
    /// Can be applied to the following elements: [`table`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table#summary)
    #[deprecated = "This HTML attribute is deprecated in the latest standard."]
    Summary => "summary",
    /// Overrides the browser's default tab order and follows the one specified instead.
    ///
    /// Corresponds to the HTML attribute: `tabindex`.
    ///
    /// Global attribute: can be applied to any HTML element.
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)
    TabIndex => "tabindex",
    /// Specifies where to open the linked document (in the case of an [`a`] element) or where to display the response received (in the case of a [`form`] element)
    ///
    /// Corresponds to the HTML attribute: `target`.
    ///
    /// Can be applied to the following elements: [`a`], [`area`], [`base`], [`form`].
    ///
    /// *Missing MDN documentation.*
    Target => "target",
    /// Text to be displayed in a tooltip when hovering over the element.
    ///
    /// Corresponds to the HTML attribute: `title`.
    ///
    /// Global attribute: can be applied to any HTML element.
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title)
    Title => "title",
    /// Specify whether an element's attribute values and the values of its Text node children are to be translated when the page is localized, or whether to leave them unchanged.
    ///
    /// Corresponds to the HTML attribute: `translate`.
    ///
    /// Global attribute: can be applied to any HTML element.
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/translate)
    Translate => "translate",
    /// Defines the type of the element.
    ///
    /// Corresponds to the HTML attribute: `type`.
    ///
    /// Can be applied to the following elements: [`button`], [`embed`], [`input`], [`link`], [`menu`], [`object`], [`ol`], [`script`], [`source`], [`style`].
    ///
    /// *Missing MDN documentation.*
    Type => "type",
    /// *Missing MDN description.*
    ///
    /// Corresponds to the HTML attribute: `usemap`.
    ///
    /// Can be applied to the following elements: [`img`], [`input`], [`object`].
    ///
    /// *Missing MDN documentation.*
    UseMap => "usemap",
    /// For the elements listed here, this establishes the element's width. Note: For all other instances, such as [`div`], this is a legacy attribute, in which case the CSS width property should be used instead.
    ///
    /// Corresponds to the HTML attribute: `width`.
    ///
    /// Can be applied to the following elements: [`canvas`], [`embed`], [`iframe`], [`img`], [`input`], [`object`], [`video`].
    ///
    /// *Missing MDN documentation.*
    Width => "width",
    /// Indicates whether the text should be wrapped.
    ///
    /// Corresponds to the HTML attribute: `wrap`.
    ///
    /// Can be applied to the following elements: [`textarea`].
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#wrap)
    Wrap => "wrap",
}

elements! {
    /// Together with its href attribute, creates a hyperlink to web pages, files, email addresses, locations within the current page, or anything else a URL can address.
    ///
    /// Corresponds to the HTML element: `<a>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Download`], [`Draggable`], [`Hidden`], [`HrefLang`], [`Href`], [`Id`], [`ItemProp`], [`Lang`], [`Media`], [`Ping`], [`ReferrerPolicy`], [`Rel`], [`Role`], [`Shape`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Target`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a)
    a => "a",
    /// Represents an abbreviation or acronym.
    ///
    /// Corresponds to the HTML element: `<abbr>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr)
    abbr => "abbr",
    /// Allows authors to clearly indicate a sequence of characters that compose an acronym or abbreviation for a word.
    ///
    /// Corresponds to the HTML element: `<acronym>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/acronym)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    acronym => "acronym",
    /// Indicates that the enclosed HTML provides contact information for a person or people, or for an organization.
    ///
    /// Corresponds to the HTML element: `<address>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address)
    address => "address",
    /// Defines an area inside an image map that has predefined clickable areas. An image map allows geometric areas on an image to be associated with hyperlink.
    ///
    /// Corresponds to the HTML element: `<area>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`Alt`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Coords`], [`Dir`], [`Download`], [`Draggable`], [`Hidden`], [`Href`], [`Id`], [`ItemProp`], [`Lang`], [`Media`], [`Ping`], [`ReferrerPolicy`], [`Rel`], [`Role`], [`Shape`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Target`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area)
    area => "area",
    /// Represents a self-contained composition in a document, page, application, or site, which is intended to be independently distributable or reusable (e.g., in syndication). Examples include a forum post, a magazine or newspaper article, a blog entry, a product card, a user-submitted comment, an interactive widget or gadget, or any other independent item of content.
    ///
    /// Corresponds to the HTML element: `<article>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article)
    article => "article",
    /// Represents a portion of a document whose content is only indirectly related to the document's main content. Asides are frequently presented as sidebars or call-out boxes.
    ///
    /// Corresponds to the HTML element: `<aside>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside)
    aside => "aside",
    /// Used to embed sound content in documents. It may contain one or more audio sources, represented using the src attribute or the source element: the browser will choose the most suitable one. It can also be the destination for streamed media, using a MediaStream.
    ///
    /// Corresponds to the HTML element: `<audio>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`AutoPlay`], [`Buffered`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Controls`], [`CrossOrigin`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Loop`], [`Muted`], [`Preload`], [`Role`], [`Slot`], [`SpellCheck`], [`Src`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio)
    audio => "audio",
    /// Used to draw the reader's attention to the element's contents, which are not otherwise granted special importance. This was formerly known as the Boldface element, and most browsers still draw the text in boldface. However, you should not use [`b`] for styling text or granting importance. If you wish to create boldface text, you should use the CSS font-weight property. If you wish to indicate an element is of special importance, you should use the strong element.
    ///
    /// Corresponds to the HTML element: `<b>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b)
    b => "b",
    /// Specifies the base URL to use for all relative URLs in a document. There can be only one such element in a document.
    ///
    /// Corresponds to the HTML element: `<base>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Href`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Target`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base)
    base => "base",
    /// Tells the browser's bidirectional algorithm to treat the text it contains in isolation from its surrounding text. It's particularly useful when a website dynamically inserts some text and doesn't know the directionality of the text being inserted.
    ///
    /// Corresponds to the HTML element: `<bdi>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdi)
    bdi => "bdi",
    /// Overrides the current directionality of text, so that the text within is rendered in a different direction.
    ///
    /// Corresponds to the HTML element: `<bdo>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdo)
    bdo => "bdo",
    /// Renders the enclosed text at a font size one level larger than the surrounding text (medium becomes large, for example). The size is capped at the browser's maximum permitted font size.
    ///
    /// Corresponds to the HTML element: `<big>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/big)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    big => "big",
    /// Indicates that the enclosed text is an extended quotation. Usually, this is rendered visually by indentation. A URL for the source of the quotation may be given using the cite attribute, while a text representation of the source can be given using the [`cite`] element.
    ///
    /// Corresponds to the HTML element: `<blockquote>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Cite`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote)
    blockquote => "blockquote",
    /// represents the content of an HTML document. There can be only one such element in a document.
    ///
    /// Corresponds to the HTML element: `<body>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Background`], [`BgColor`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body)
    body => "body",
    /// Produces a line break in text (carriage-return). It is useful for writing a poem or an address, where the division of lines is significant.
    ///
    /// Corresponds to the HTML element: `<br>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br)
    br => "br",
    /// An interactive element activated by a user with a mouse, keyboard, finger, voice command, or other assistive technology. Once activated, it performs an action, such as submitting a form or opening a dialog.
    ///
    /// Corresponds to the HTML element: `<button>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`DefaultValue`], [`Dir`], [`Disabled`], [`Draggable`], [`FormAction`], [`FormEnctype`], [`FormMethod`], [`FormNoValidate`], [`FormTarget`], [`Form`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Name`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`], [`Type`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button)
    button => "button",
    /// Container element to use with either the canvas scripting API or the WebGL API to draw graphics and animations.
    ///
    /// Corresponds to the HTML element: `<canvas>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Height`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`], [`Width`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas)
    canvas => "canvas",
    /// Specifies the caption (or title) of a table.
    ///
    /// Corresponds to the HTML element: `<caption>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`Align`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption)
    caption => "caption",
    /// Displays its block-level or inline contents centered horizontally within its containing element.
    ///
    /// Corresponds to the HTML element: `<center>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/center)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    center => "center",
    /// Used to mark up the title of a cited creative work. The reference may be in an abbreviated form according to context-appropriate conventions related to citation metadata.
    ///
    /// Corresponds to the HTML element: `<cite>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite)
    cite => "cite",
    /// Displays its contents styled in a fashion intended to indicate that the text is a short fragment of computer code. By default, the content text is displayed using the user agent's default monospace font.
    ///
    /// Corresponds to the HTML element: `<code>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code)
    code => "code",
    /// Defines a column within a table and is used for defining common semantics on all common cells. It is generally found within a [`colgroup`] element.
    ///
    /// Corresponds to the HTML element: `<col>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`Align`], [`AutoCapitalize`], [`BgColor`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`Span`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col)
    col => "col",
    /// Defines a group of columns within a table.
    ///
    /// Corresponds to the HTML element: `<colgroup>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`Align`], [`AutoCapitalize`], [`BgColor`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`Span`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup)
    colgroup => "colgroup",
    /// An obsolete part of the Web Components suite of technologies—was used inside of Shadow DOM as an insertion point, and wasn't meant to be used in ordinary HTML. It has now been replaced by the [`slot`] element, which creates a point in the DOM at which a shadow DOM can be inserted. Consider using [`slot`] instead.
    ///
    /// Corresponds to the HTML element: `<content>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// *Missing MDN documentation.*
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    content => "content",
    /// Links a given piece of content with a machine-readable translation. If the content is time- or date-related, the[`time`] element must be used.
    ///
    /// Corresponds to the HTML element: `<data>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`DefaultValue`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/data)
    data => "data",
    /// Contains a set of [`option`] elements that represent the permissible or recommended options available to choose from within other controls.
    ///
    /// Corresponds to the HTML element: `<datalist>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist)
    datalist => "datalist",
    /// Provides the description, definition, or value for the preceding term ([`dt`]) in a description list ([`dl`]).
    ///
    /// Corresponds to the HTML element: `<dd>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd)
    dd => "dd",
    /// Represents a range of text that has been deleted from a document. This can be used when rendering "track changes" or source code diff information, for example. The [`ins`] element can be used for the opposite purpose: to indicate text that has been added to the document.
    ///
    /// Corresponds to the HTML element: `<del>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Cite`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`DateTime`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del)
    del => "del",
    /// Creates a disclosure widget in which information is visible only when the widget is toggled into an "open" state. A summary or label must be provided using the [`summary`] element.
    ///
    /// Corresponds to the HTML element: `<details>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Open`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details)
    details => "details",
    /// Used to indicate the term being defined within the context of a definition phrase or sentence. The ancestor [`p`] element, the [`dt`]/[`dd`] pairing, or the nearest section ancestor of the [`dfn`] element, is considered to be the definition of the term.
    ///
    /// Corresponds to the HTML element: `<dfn>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dfn)
    dfn => "dfn",
    /// Represents a dialog box or other interactive component, such as a dismissible alert, inspector, or subwindow.
    ///
    /// Corresponds to the HTML element: `<dialog>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Open`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog)
    dialog => "dialog",
    /// Container for a directory of files and/or folders, potentially with styles and icons applied by the user agent. Do not use this obsolete element; instead, you should use the [`ul`] element for lists, including lists of files.
    ///
    /// Corresponds to the HTML element: `<dir>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dir)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    dir => "dir",
    /// The generic container for flow content. It has no effect on the content or layout until styled in some way using CSS (e.g., styling is directly applied to it, or some kind of layout model like flexbox is applied to its parent element).
    ///
    /// Corresponds to the HTML element: `<div>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div)
    div => "div",
    /// Represents a description list. The element encloses a list of groups of terms (specified using the [`dt`] element) and descriptions (provided by [`dd`] elements). Common uses for this element are to implement a glossary or to display metadata (a list of key-value pairs).
    ///
    /// Corresponds to the HTML element: `<dl>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl)
    dl => "dl",
    /// Specifies a term in a description or definition list, and as such must be used inside a [`dl`] element. It is usually followed by a [`dd`] element; however, multiple [`dt`] elements in a row indicate several terms that are all defined by the immediate next [`dd`] element.
    ///
    /// Corresponds to the HTML element: `<dt>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt)
    dt => "dt",
    /// Marks text that has stress emphasis. The [`em`] element can be nested, with each nesting level indicating a greater degree of emphasis.
    ///
    /// Corresponds to the HTML element: `<em>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em)
    em => "em",
    /// Embeds external content at the specified point in the document. This content is provided by an external application or other source of interactive content such as a browser plug-in.
    ///
    /// Corresponds to the HTML element: `<embed>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Height`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Src`], [`Style`], [`TabIndex`], [`Title`], [`Translate`], [`Type`], [`Width`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed)
    embed => "embed",
    /// Used to group several controls as well as labels ([`label`]) within a web form.
    ///
    /// Corresponds to the HTML element: `<fieldset>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Disabled`], [`Draggable`], [`Form`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Name`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset)
    fieldset => "fieldset",
    /// Represents a caption or legend describing the rest of the contents of its parent [`figure`] element.
    ///
    /// Corresponds to the HTML element: `<figcaption>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption)
    figcaption => "figcaption",
    /// Represents self-contained content, potentially with an optional caption, which is specified using the [`figcaption`] element. The figure, its caption, and its contents are referenced as a single unit.
    ///
    /// Corresponds to the HTML element: `<figure>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure)
    figure => "figure",
    /// Defines the font size, color and face for its content.
    ///
    /// Corresponds to the HTML element: `<font>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`Color`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    font => "font",
    /// Represents a footer for its nearest ancestor sectioning content or sectioning root element. A [`footer`] typically contains information about the author of the section, copyright data, or links to related documents.
    ///
    /// Corresponds to the HTML element: `<footer>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer)
    footer => "footer",
    /// Represents a document section containing interactive controls for submitting information.
    ///
    /// Corresponds to the HTML element: `<form>`.
    ///
    /// Supports the following attributes: [`AcceptCharset`], [`Accept`], [`AccessKey`], [`Action`], [`AutoCapitalize`], [`AutoComplete`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`EncType`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Method`], [`Name`], [`NoValidate`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Target`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form)
    form => "form",
    /// Defines a particular area in which another HTML document can be displayed. A frame should be used within a [`frameset`].
    ///
    /// Corresponds to the HTML element: `<frame>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    frame => "frame",
    /// Used to contain [`frame`] elements.
    ///
    /// Corresponds to the HTML element: `<frameset>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frameset)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    frameset => "frameset",
    /// Represents a section heading of level 1. [`h1`] being the highest and [`h6`] the lowest.
    ///
    /// Corresponds to the HTML element: `<h1>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements)
    h1 => "h1",
    /// Represents a section heading of level 2. [`h1`] being the highest and [`h6`] the lowest.
    ///
    /// Corresponds to the HTML element: `<h2>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements)
    h2 => "h2",
    /// Represents a section heading of level 3. [`h1`] being the highest and [`h6`] the lowest.
    ///
    /// Corresponds to the HTML element: `<h3>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements)
    h3 => "h3",
    /// Represents a section heading of level 4. [`h1`] being the highest and [`h6`] the lowest.
    ///
    /// Corresponds to the HTML element: `<h4>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements)
    h4 => "h4",
    /// Represents a section heading of level 5. [`h1`] being the highest and [`h6`] the lowest.
    ///
    /// Corresponds to the HTML element: `<h5>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements)
    h5 => "h5",
    /// Represents a section heading of level 6. [`h1`] being the highest and [`h6`] the lowest.
    ///
    /// Corresponds to the HTML element: `<h6>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/Heading_Elements)
    h6 => "h6",
    /// Contains machine-readable information (metadata) about the document, like its title, scripts, and style sheets.
    ///
    /// Corresponds to the HTML element: `<head>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head)
    head => "head",
    /// Represents introductory content, typically a group of introductory or navigational aids. It may contain some heading elements but also a logo, a search form, an author name, and other elements.
    ///
    /// Corresponds to the HTML element: `<header>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header)
    header => "header",
    /// Represents a heading grouped with any secondary content, such as subheadings, an alternative title, or a tagline.
    ///
    /// Corresponds to the HTML element: `<hgroup>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup)
    hgroup => "hgroup",
    /// Represents a thematic break between paragraph-level elements: for example, a change of scene in a story, or a shift of topic within a section.
    ///
    /// Corresponds to the HTML element: `<hr>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`Align`], [`AutoCapitalize`], [`Class`], [`Color`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr)
    hr => "hr",
    /// Represents the root (top-level element) of an HTML document, so it is also referred to as the root element. All other elements must be descendants of this element.
    ///
    /// Corresponds to the HTML element: `<html>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Manifest`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html)
    html => "html",
    /// Represents a range of text that is set off from the normal text for some reason, such as idiomatic text, technical terms, and taxonomical designations, among others. Historically, these have been presented using italicized type, which is the original source of the [`i`] naming of this element.
    ///
    /// Corresponds to the HTML element: `<i>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i)
    i => "i",
    /// Represents a nested browsing context, embedding another HTML page into the current one.
    ///
    /// Corresponds to the HTML element: `<iframe>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`Align`], [`Allow`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Csp`], [`Dir`], [`Draggable`], [`Height`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Loading`], [`Name`], [`ReferrerPolicy`], [`Role`], [`SandBox`], [`Slot`], [`SpellCheck`], [`SrcDoc`], [`Src`], [`Style`], [`TabIndex`], [`Title`], [`Translate`], [`Width`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe)
    iframe => "iframe",
    /// An ancient and poorly supported precursor to the [`img`] element. It should not be used.
    ///
    /// Corresponds to the HTML element: `<image>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/image)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    image => "image",
    /// Embeds an image into the document.
    ///
    /// Corresponds to the HTML element: `<img>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`Align`], [`Alt`], [`AutoCapitalize`], [`Border`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`CrossOrigin`], [`Decoding`], [`Dir`], [`Draggable`], [`Height`], [`Hidden`], [`Id`], [`IntrinsicSize`], [`IsMap`], [`ItemProp`], [`Lang`], [`Loading`], [`ReferrerPolicy`], [`Role`], [`Sizes`], [`Slot`], [`SpellCheck`], [`SrcSet`], [`Src`], [`Style`], [`TabIndex`], [`Title`], [`Translate`], [`UseMap`], [`Width`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img)
    img => "img",
    /// Used to create interactive controls for web-based forms to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent. The [`input`] element is one of the most powerful and complex in all of HTML due to the sheer number of combinations of input types and attributes.
    ///
    /// Corresponds to the HTML element: `<input>`.
    ///
    /// Supports the following attributes: [`Accept`], [`AccessKey`], [`Alt`], [`AutoCapitalize`], [`AutoComplete`], [`Capture`], [`Checked`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`DefaultValue`], [`DirName`], [`Dir`], [`Disabled`], [`Draggable`], [`FormAction`], [`FormEnctype`], [`FormMethod`], [`FormNoValidate`], [`FormTarget`], [`Form`], [`Height`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`List`], [`MaxLength`], [`Max`], [`MinLength`], [`Min`], [`Multiple`], [`Name`], [`Pattern`], [`PlaceHolder`], [`ReadOnly`], [`Required`], [`Role`], [`Size`], [`Slot`], [`SpellCheck`], [`Src`], [`Step`], [`Style`], [`TabIndex`], [`Title`], [`Translate`], [`Type`], [`UseMap`], [`Width`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input)
    input => "input",
    /// Represents a range of text that has been added to a document. You can use the [`del`] element to similarly represent a range of text that has been deleted from the document.
    ///
    /// Corresponds to the HTML element: `<ins>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Cite`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`DateTime`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins)
    ins => "ins",
    /// Represents a span of inline text denoting textual user input from a keyboard, voice input, or any other text entry device. By convention, the user agent defaults to rendering the contents of a [`kbd`] element using its default monospace font, although this is not mandated by the HTML standard.
    ///
    /// Corresponds to the HTML element: `<kbd>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd)
    kbd => "kbd",
    /// Represents a caption for an item in a user interface.
    ///
    /// Corresponds to the HTML element: `<label>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`For`], [`Form`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label)
    label => "label",
    /// Represents a caption for the content of its parent [`fieldset`].
    ///
    /// Corresponds to the HTML element: `<legend>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend)
    legend => "legend",
    /// Represents an item in a list. It must be contained in a parent element: an ordered list ([`ol`]), an unordered list ([`ul`]), or a menu ([`menu`]). In menus and unordered lists, list items are usually displayed using bullet points. In ordered lists, they are usually displayed with an ascending counter on the left, such as a number or letter.
    ///
    /// Corresponds to the HTML element: `<li>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`DefaultValue`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li)
    li => "li",
    /// Specifies relationships between the current document and an external resource. This element is most commonly used to link to CSS but is also used to establish site icons (both "favicon" style icons and icons for the home screen and apps on mobile devices) among other things.
    ///
    /// Corresponds to the HTML element: `<link>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`CrossOrigin`], [`Dir`], [`Draggable`], [`Hidden`], [`HrefLang`], [`Href`], [`Id`], [`Integrity`], [`ItemProp`], [`Lang`], [`Media`], [`ReferrerPolicy`], [`Rel`], [`Role`], [`Sizes`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`], [`Type`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link)
    link => "link",
    /// Represents the dominant content of the body of a document. The main content area consists of content that is directly related to or expands upon the central topic of a document, or the central functionality of an application.
    ///
    /// Corresponds to the HTML element: `<main>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main)
    main => "main",
    /// Used with [`area`] elements to define an image map (a clickable link area).
    ///
    /// Corresponds to the HTML element: `<map>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Name`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map)
    map => "map",
    /// Represents text which is marked or highlighted for reference or notation purposes due to the marked passage's relevance in the enclosing context.
    ///
    /// Corresponds to the HTML element: `<mark>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark)
    mark => "mark",
    /// Used to insert a scrolling area of text. You can control what happens when the text reaches the edges of its content area using its attributes.
    ///
    /// Corresponds to the HTML element: `<marquee>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`BgColor`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Loop`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/marquee)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    marquee => "marquee",
    /// The top-level element in MathML. Every valid MathML instance must be wrapped in it. In addition, you must not nest a second [`math`] element in another, but you can have an arbitrary number of other child elements in it.
    ///
    /// Corresponds to the HTML element: `<math>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/MathML/Element/math)
    math => "math",
    /// A semantic alternative to [`ul`], but treated by browsers (and exposed through the accessibility tree) as no different than [`ul`]. It represents an unordered list of items (which are represented by [`li`] elements).
    ///
    /// Corresponds to the HTML element: `<menu>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`], [`Type`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu)
    menu => "menu",
    /// Represents a command that a user is able to invoke through a popup menu. This includes context menus, as well as menus that might be attached to a menu button.
    ///
    /// Corresponds to the HTML element: `<menuitem>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menuitem)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    menuitem => "menuitem",
    /// Represents metadata that cannot be represented by other HTML meta-related elements, like [`base`], [`link`], [`script`], [`style`] and [`title`].
    ///
    /// Corresponds to the HTML element: `<meta>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Charset`], [`Class`], [`ContentEditable`], [`Content`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`HttpEquiv`], [`Id`], [`ItemProp`], [`Lang`], [`Name`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta)
    meta => "meta",
    /// Represents either a scalar value within a known range or a fractional value.
    ///
    /// Corresponds to the HTML element: `<meter>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`DefaultValue`], [`Dir`], [`Draggable`], [`Form`], [`Hidden`], [`High`], [`Id`], [`ItemProp`], [`Lang`], [`Low`], [`Max`], [`Min`], [`Optimum`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter)
    meter => "meter",
    /// Represents a section of a page whose purpose is to provide navigation links, either within the current document or to other documents. Common examples of navigation sections are menus, tables of contents, and indexes.
    ///
    /// Corresponds to the HTML element: `<nav>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav)
    nav => "nav",
    /// Prevents the text it contains from automatically wrapping across multiple lines, potentially resulting in the user having to scroll horizontally to see the entire width of the text.
    ///
    /// Corresponds to the HTML element: `<nobr>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nobr)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    nobr => "nobr",
    /// An obsolete, non-standard way to provide alternative, or "fallback", content for browsers that do not support the embed element or do not support the type of embedded content an author wishes to use. This element was deprecated in HTML 4.01 and above in favor of placing fallback content between the opening and closing tags of an [`object`] element.
    ///
    /// Corresponds to the HTML element: `<noembed>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noembed)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    noembed => "noembed",
    /// Provides content to be presented in browsers that don't support (or have disabled support for) the [`frame`] element. Although most commonly-used browsers support frames, there are exceptions, including certain special-use browsers including some mobile browsers, as well as text-mode browsers.
    ///
    /// Corresponds to the HTML element: `<noframes>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noframes)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    noframes => "noframes",
    /// Defines a section of HTML to be inserted if a script type on the page is unsupported or if scripting is currently turned off in the browser.
    ///
    /// Corresponds to the HTML element: `<noscript>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noscript)
    noscript => "noscript",
    /// Represents an external resource, which can be treated as an image, a nested browsing context, or a resource to be handled by a plugin.
    ///
    /// Corresponds to the HTML element: `<object>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Border`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Data`], [`Dir`], [`Draggable`], [`Form`], [`Height`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Name`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`], [`Type`], [`UseMap`], [`Width`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object)
    object => "object",
    /// Represents an ordered list of items — typically rendered as a numbered list.
    ///
    /// Corresponds to the HTML element: `<ol>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Reversed`], [`Role`], [`Slot`], [`SpellCheck`], [`Start`], [`Style`], [`TabIndex`], [`Title`], [`Translate`], [`Type`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol)
    ol => "ol",
    /// Creates a grouping of options within a [`select`] element.
    ///
    /// Corresponds to the HTML element: `<optgroup>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Disabled`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Label`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup)
    optgroup => "optgroup",
    /// Used to define an item contained in a select, an [`optgroup`], or a [`datalist`] element. As such, [`option`] can represent menu items in popups and other lists of items in an HTML document.
    ///
    /// Corresponds to the HTML element: `<option>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`DefaultValue`], [`Dir`], [`Disabled`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Label`], [`Lang`], [`Role`], [`Selected`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)
    option => "option",
    /// Container element into which a site or app can inject the results of a calculation or the outcome of a user action.
    ///
    /// Corresponds to the HTML element: `<output>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`For`], [`Form`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Name`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/output)
    output => "output",
    /// Represents a paragraph. Paragraphs are usually represented in visual media as blocks of text separated from adjacent blocks by blank lines and/or first-line indentation, but HTML paragraphs can be any structural grouping of related content, such as images or form fields.
    ///
    /// Corresponds to the HTML element: `<p>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p)
    p => "p",
    /// Defines parameters for an [`object`] element.
    ///
    /// Corresponds to the HTML element: `<param>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`DefaultValue`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Name`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/param)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    param => "param",
    /// Contains zero or more [`source`] elements and one [`img`] element to offer alternative versions of an image for different display/device scenarios.
    ///
    /// Corresponds to the HTML element: `<picture>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/picture)
    picture => "picture",
    /// Renders everything following the start tag as raw text, ignoring any following HTML. There is no closing tag, since everything after it is considered raw text.
    ///
    /// Corresponds to the HTML element: `<plaintext>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/plaintext)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    plaintext => "plaintext",
    /// Enables the embedding of another HTML page into the current one to enable smoother navigation into new pages.
    ///
    /// Corresponds to the HTML element: `<portal>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/portal)
    portal => "portal",
    /// Represents preformatted text which is to be presented exactly as written in the HTML file. The text is typically rendered using a non-proportional, or monospaced, font. Whitespace inside this element is displayed as written.
    ///
    /// Corresponds to the HTML element: `<pre>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre)
    pre => "pre",
    /// Displays an indicator showing the completion progress of a task, typically displayed as a progress bar.
    ///
    /// Corresponds to the HTML element: `<progress>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`DefaultValue`], [`Dir`], [`Draggable`], [`Form`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Max`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress)
    progress => "progress",
    /// Indicates that the enclosed text is a short inline quotation. Most modern browsers implement this by surrounding the text in quotation marks. This element is intended for short quotations that don't require paragraph breaks; for long quotations use the [`blockquote`] element.
    ///
    /// Corresponds to the HTML element: `<q>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Cite`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q)
    q => "q",
    /// Used to delimit the base text component of a ruby annotation, i.e. the text that is being annotated. One [`rb`] element should wrap each separate atomic segment of the base text.
    ///
    /// Corresponds to the HTML element: `<rb>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rb)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    rb => "rb",
    /// Used to provide fall-back parentheses for browsers that do not support the display of ruby annotations using the [`ruby`] element. One [`rp`] element should enclose each of the opening and closing parentheses that wrap the [`rt`] element that contains the annotation's text.
    ///
    /// Corresponds to the HTML element: `<rp>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rp)
    rp => "rp",
    /// Specifies the ruby text component of a ruby annotation, which is used to provide pronunciation, translation, or transliteration information for East Asian typography. The [`rt`] element must always be contained within a [`ruby`] element.
    ///
    /// Corresponds to the HTML element: `<rt>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rt)
    rt => "rt",
    /// Embraces semantic annotations of characters presented in a ruby of [`rb`] elements used inside of [`ruby`] element. [`rb`] elements can have both pronunciation ([`rt`]) and semantic ([`rtc`]) annotations.
    ///
    /// Corresponds to the HTML element: `<rtc>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rtc)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    rtc => "rtc",
    /// Represents small annotations that are rendered above, below, or next to base text, usually used for showing the pronunciation of East Asian characters. It can also be used for annotating other kinds of text, but this usage is less common.
    ///
    /// Corresponds to the HTML element: `<ruby>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ruby)
    ruby => "ruby",
    /// Renders text with a strikethrough, or a line through it. Use the [`s`] element to represent things that are no longer relevant or no longer accurate. However, [`s`] is not appropriate when indicating document edits; for that, use the del and ins elements, as appropriate.
    ///
    /// Corresponds to the HTML element: `<s>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s)
    s => "s",
    /// Used to enclose inline text which represents sample (or quoted) output from a computer program. Its contents are typically rendered using the browser's default monospaced font (such as Courier or Lucida Console).
    ///
    /// Corresponds to the HTML element: `<samp>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/samp)
    samp => "samp",
    /// Used to embed executable code or data; this is typically used to embed or refer to JavaScript code. The [`script`] element can also be used with other languages, such as WebGL's GLSL shader programming language and JSON.
    ///
    /// Corresponds to the HTML element: `<script>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`Async`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`CrossOrigin`], [`Defer`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`Integrity`], [`ItemProp`], [`Lang`], [`Language`], [`ReferrerPolicy`], [`Role`], [`Slot`], [`SpellCheck`], [`Src`], [`Style`], [`TabIndex`], [`Title`], [`Translate`], [`Type`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script)
    script => "script",
    /// Represents a part that contains a set of form controls or other content related to performing a search or filtering operation.
    ///
    /// Corresponds to the HTML element: `<search>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/search)
    search => "search",
    /// Represents a generic standalone section of a document, which doesn't have a more specific semantic element to represent it. Sections should always have a heading, with very few exceptions.
    ///
    /// Corresponds to the HTML element: `<section>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section)
    section => "section",
    /// Represents a control that provides a menu of options.
    ///
    /// Corresponds to the HTML element: `<select>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`AutoComplete`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Disabled`], [`Draggable`], [`Form`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Multiple`], [`Name`], [`Required`], [`Role`], [`Size`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select)
    select => "select",
    /// An obsolete part of the Web Components technology suite that was intended to be used as a shadow DOM insertion point. You might have used it if you have created multiple shadow roots under a shadow host. Consider using [`slot`] instead.
    ///
    /// Corresponds to the HTML element: `<shadow>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// *Missing MDN documentation.*
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    shadow => "shadow",
    /// Part of the Web Components technology suite, this element is a placeholder inside a web component that you can fill with your own markup, which lets you create separate DOM trees and present them together.
    ///
    /// Corresponds to the HTML element: `<slot>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/slot)
    slot => "slot",
    /// Represents side-comments and small print, like copyright and legal text, independent of its styled presentation. By default, it renders text within it one font size smaller, such as from small to x-small.
    ///
    /// Corresponds to the HTML element: `<small>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/small)
    small => "small",
    /// Specifies multiple media resources for the picture, the audio element, or the video element. It is a void element, meaning that it has no content and does not have a closing tag. It is commonly used to offer the same media content in multiple file formats in order to provide compatibility with a broad range of browsers given their differing support for image file formats and media file formats.
    ///
    /// Corresponds to the HTML element: `<source>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Media`], [`Role`], [`Sizes`], [`Slot`], [`SpellCheck`], [`SrcSet`], [`Src`], [`Style`], [`TabIndex`], [`Title`], [`Translate`], [`Type`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source)
    source => "source",
    /// A generic inline container for phrasing content, which does not inherently represent anything. It can be used to group elements for styling purposes (using the class or id attributes), or because they share attribute values, such as lang. It should be used only when no other semantic element is appropriate. [`span`] is very much like a div element, but div is a block-level element whereas a [`span`] is an inline-level element.
    ///
    /// Corresponds to the HTML element: `<span>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span)
    span => "span",
    /// Places a strikethrough (horizontal line) over text.
    ///
    /// Corresponds to the HTML element: `<strike>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strike)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    strike => "strike",
    /// Indicates that its contents have strong importance, seriousness, or urgency. Browsers typically render the contents in bold type.
    ///
    /// Corresponds to the HTML element: `<strong>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong)
    strong => "strong",
    /// Contains style information for a document or part of a document. It contains CSS, which is applied to the contents of the document containing this element.
    ///
    /// Corresponds to the HTML element: `<style>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Media`], [`Role`], [`Scoped`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`], [`Type`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style)
    style => "style",
    /// Specifies inline text which should be displayed as subscript for solely typographical reasons. Subscripts are typically rendered with a lowered baseline using smaller text.
    ///
    /// Corresponds to the HTML element: `<sub>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub)
    sub => "sub",
    /// Specifies a summary, caption, or legend for a details element's disclosure box. Clicking the [`summary`] element toggles the state of the parent [`details`] element open and closed.
    ///
    /// Corresponds to the HTML element: `<summary>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/summary)
    summary => "summary",
    /// Specifies inline text which is to be displayed as superscript for solely typographical reasons. Superscripts are usually rendered with a raised baseline using smaller text.
    ///
    /// Corresponds to the HTML element: `<sup>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup)
    sup => "sup",
    /// Container defining a new coordinate system and viewport. It is used as the outermost element of SVG documents, but it can also be used to embed an SVG fragment inside an SVG or HTML document.
    ///
    /// Corresponds to the HTML element: `<svg>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg)
    svg => "svg",
    /// Represents tabular data — that is, information presented in a two-dimensional table comprised of rows and columns of cells containing data.
    ///
    /// Corresponds to the HTML element: `<table>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`Align`], [`AutoCapitalize`], [`Background`], [`BgColor`], [`Border`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`Summary`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table)
    table => "table",
    /// Encapsulates a set of table rows ([`tr`] elements), indicating that they comprise the body of the table ([`table`]).
    ///
    /// Corresponds to the HTML element: `<tbody>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`Align`], [`AutoCapitalize`], [`BgColor`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody)
    tbody => "tbody",
    /// Defines a cell of a table that contains data. It participates in the table model.
    ///
    /// Corresponds to the HTML element: `<td>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`Align`], [`AutoCapitalize`], [`Background`], [`BgColor`], [`Class`], [`Colspan`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Headers`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`RowSpan`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td)
    td => "td",
    /// A mechanism for holding HTML that is not to be rendered immediately when a page is loaded but may be instantiated subsequently during runtime using JavaScript.
    ///
    /// Corresponds to the HTML element: `<template>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template)
    template => "template",
    /// Represents a multi-line plain-text editing control, useful when you want to allow users to enter a sizeable amount of free-form text, for example, a comment on a review or feedback form.
    ///
    /// Corresponds to the HTML element: `<textarea>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`AutoComplete`], [`Class`], [`Cols`], [`ContentEditable`], [`ContextMenu`], [`DirName`], [`Dir`], [`Disabled`], [`Draggable`], [`EnterKeyHint`], [`Form`], [`Hidden`], [`Id`], [`InputMode`], [`ItemProp`], [`Lang`], [`MaxLength`], [`MinLength`], [`Name`], [`PlaceHolder`], [`ReadOnly`], [`Required`], [`Role`], [`Rows`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`], [`Wrap`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea)
    textarea => "textarea",
    /// Defines a set of rows summarizing the columns of the table.
    ///
    /// Corresponds to the HTML element: `<tfoot>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`Align`], [`AutoCapitalize`], [`BgColor`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot)
    tfoot => "tfoot",
    /// Defines a cell as a header of a group of table cells. The exact nature of this group is defined by the scope and headers attributes.
    ///
    /// Corresponds to the HTML element: `<th>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`Align`], [`AutoCapitalize`], [`Background`], [`BgColor`], [`Class`], [`Colspan`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Headers`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`RowSpan`], [`Scope`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th)
    th => "th",
    /// Defines a set of rows defining the head of the columns of the table.
    ///
    /// Corresponds to the HTML element: `<thead>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`Align`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead)
    thead => "thead",
    /// Represents a specific period in time. It may include the datetime attribute to translate dates into machine-readable format, allowing for better search engine results or custom features such as reminders.
    ///
    /// Corresponds to the HTML element: `<time>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`DateTime`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time)
    time => "time",
    /// Defines the document's title that is shown in a browser's title bar or a page's tab. It only contains text; tags within the element are ignored.
    ///
    /// Corresponds to the HTML element: `<title>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title)
    title => "title",
    /// Defines a row of cells in a table. The row's cells can then be established using a mix of [`td`] (data cell) and [`th`] (header cell) elements.
    ///
    /// Corresponds to the HTML element: `<tr>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`Align`], [`AutoCapitalize`], [`BgColor`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr)
    tr => "tr",
    /// Used as a child of the media elements, audio and video. It lets you specify timed text tracks (or time-based data), for example to automatically handle subtitles. The tracks are formatted in WebVTT format (.vtt files)—Web Video Text Tracks.
    ///
    /// Corresponds to the HTML element: `<track>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Default`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Kind`], [`Label`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`SrcLang`], [`Src`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track)
    track => "track",
    /// Creates inline text which is presented using the user agent default monospace font face. This element was created for the purpose of rendering text as it would be displayed on a fixed-width display such as a teletype, text-only screen, or line printer.
    ///
    /// Corresponds to the HTML element: `<tt>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tt)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    tt => "tt",
    /// Represents a span of inline text which should be rendered in a way that indicates that it has a non-textual annotation. This is rendered by default as a simple solid underline but may be altered using CSS.
    ///
    /// Corresponds to the HTML element: `<u>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u)
    u => "u",
    /// Represents an unordered list of items, typically rendered as a bulleted list.
    ///
    /// Corresponds to the HTML element: `<ul>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul)
    ul => "ul",
    /// Represents the name of a variable in a mathematical expression or a programming context. It's typically presented using an italicized version of the current typeface, although that behavior is browser-dependent.
    ///
    /// Corresponds to the HTML element: `<var>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/var)
    var => "var",
    /// Embeds a media player which supports video playback into the document. You can also use [`video`] for audio content, but the audio element may provide a more appropriate user experience.
    ///
    /// Corresponds to the HTML element: `<video>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`AutoPlay`], [`Buffered`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Controls`], [`CrossOrigin`], [`Dir`], [`Draggable`], [`Height`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Loop`], [`Muted`], [`PlaysInline`], [`Poster`], [`Preload`], [`Role`], [`Slot`], [`SpellCheck`], [`Src`], [`Style`], [`TabIndex`], [`Title`], [`Translate`], [`Width`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video)
    video => "video",
    /// Represents a word break opportunity—a position within text where the browser may optionally break a line, though its line-breaking rules would not otherwise create a break at that location.
    ///
    /// Corresponds to the HTML element: `<wbr>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr)
    wbr => "wbr",
    /// Renders text between the start and end tags without interpreting the HTML in between and using a monospaced font. The HTML2 specification recommended that it should be rendered wide enough to allow 80 characters per line.
    ///
    /// Corresponds to the HTML element: `<xmp>`.
    ///
    /// Supports the following attributes: [`AccessKey`], [`AutoCapitalize`], [`Class`], [`ContentEditable`], [`ContextMenu`], [`Dir`], [`Draggable`], [`Hidden`], [`Id`], [`ItemProp`], [`Lang`], [`Role`], [`Slot`], [`SpellCheck`], [`Style`], [`TabIndex`], [`Title`], [`Translate`]
    ///
    /// [MDN documentation.](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/xmp)
    #[deprecated = "This HTML element is deprecated in the latest standard."]
    xmp => "xmp",
}
